#!/usr/bin/env bash
#
# MIT License
#
# Copyright (c) 2020 Matthieu Petiteau
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#   .--.    _   __  _ .--.   .--.   _ .--.    _   __  _ .--..--.
#  ( (`\]  [ \ [  ][ `.-. |/ .'`\ \[ `.-. |  [ \ [  ][ `.-. .-. |
#   `'.'.   \ '/ /  | | | || \__. | | | | |   \ '/ /  | | | | | |
#  [\__) )[\_:  /  [___||__]'.__.' [___||__][\_:  /  [___||__||__]
#          \__.'                             \__.'
#
#
# Print out synonyms from the Thesaurus API.
#
# Dependencies: jq
#
# You will also need a Thesaurus API key provided at
# https://thesaurus.altervista.org/mykey

set -e
self=${0##*/}
version="$self v1.3 (Matthieu Petiteau)"

_usage() {
  cat <<EOF
.--.    _   __  _ .--.   .--.   _ .--.    _   __  _ .--..--.
( (\`\]  [ \ [  ][ \`.-. |/ .'\`\ \[ \`.-. |  [ \ [  ][ \`.-. .-. |
\`'.'.   \ '/ /  | | | || \__. | | | | |   \ '/ /  | | | | | |
[\__) )[\_:  /  [___||__]'.__.' [___||__][\_:  /  [___||__||__]
       \__.'                             \__.'

$self is a small utility tool to rapidly find synonyms directly
from your terminal.

The script is fetching https://www.thesaurus.com/ rest API.
List of languages available: en, fr, cs, el, es, da, de, hu, it,
no, pl, pt, ro, ru, sk

You will need to generate an API key to use this script, you can
do so at https://thesaurus.altervista.org/mykey

You will also need to install jq if you don't have it already
https://stedolan.github.io/jq/download/

Copyright 2020 Matthieu Petiteau, all rights reserved.
$version

Usage: $self [OPTION] [WORD]
Finds all synonyms for a specific word in the language selected
or the default one.

Options:
  -l LANG      Finds all synonyms for this specific language.
               Languages supported: en, fr, cs, el, es, da, de,
               hu, it, no, pl, pt, ro, ru, sk
  -v           Show program version number and exit.
  -h           Show help message and exit.
EOF
}

_compute() {
  local _reach_error=$(
    echo $1 |
      jq -jr '(.error)'
  )

  # Check erros
  [[ $_reach_error != "null" ]] && {
    printf "Error: $_reach_error\n" >&2
    exit 1
  }

  # process json response with jq
  local _process_result=$(
    echo $1 |
      jq '(.response | .[] .list .synonyms)'
  )

  # use tr '"' "|" here instead of jq -r in process() to make sure all
  # words can be parsed in a different column. Indeed the json output
  # from Thesaurus can be split in multiple data sets. So we use the
  # default " from jq to append a new line as well as the |.
  local _clean_data=$(
    echo $_process_result |
      tr '"' '|' |
      tr '|' '\n' |
      sed 's/([^)]*)//g' |
      sort -u
  )

  printf "$_clean_data\n" |
    column -c $(tput cols)
}

_default_os_language() {
  # associate os default language if supported by thesaurus API
  # and no language is set in synonymrc or specified in args
  shopt -s extglob

  # supported languages values by Thesaurus API
  local _supported="@(cs_CZ|da_DK|de_CH|de_DE|en_US|el_GR|es_ES|
    fr_FR|hu_HU|it_IT|no_NO|pl_PL|pt_PT|ro_RO|ru_RU|sk_SK)"

  # remove extention from os language var (ie. fr_FR.UTF-8 > fr_FR)
  local _lang=$(
    echo $1 |
      sed 's/\..*//'
  )

  case $_lang in
    $_supported) echo "$_lang" ;;
    *) echo 'en_US' ;; # default if not supported
  esac
}

_language_index() {
  case $1 in
    en) echo 'en_US' ;;
    fr) echo 'fr_FR' ;;
    cs) echo 'cs_CZ' ;;
    es) echo 'es_ES' ;;
    el) echo 'el_GR' ;;
    da) echo 'da_DK' ;;
    de) echo 'de_DE' ;;
    hu) echo 'hu_HU' ;;
    it) echo 'it_IT' ;;
    no) echo 'no_NO' ;;
    pl) echo 'pl_PL' ;;
    pt) echo 'pt_PT' ;;
    ro) echo 'ro_RO' ;;
    ru) echo 'ru_RU' ;;
    sk) echo 'sk_SK' ;;
    *)
      printf "Error: language $1 not supported\n" >&2
      exit 1
      ;;
  esac
}

_get_language() {
  # if default language not set in .synonymrc
  if [[ -z $SYNONYM_SEARCH_LANG ]]; then
    # check default language on system, defaults to en_US if not supported or not found
    [[ ! -z $LANGUAGE ]] && _default_os_language $LANGUAGE || _default_os_language $LANG
  else
    _default_os_language $SYNONYM_SEARCH_LANG
  fi
}

_init() {
  local _conf_dir=(
    $XDG_CONFIG_HOME/.synonymrc
    $HOME/.config/.synonymrc
    $HOME/.synonymrc
  )

  local _d
  for _d in "${_conf_dir[@]}"; do
    [[ -f $_d ]] && {
      source $_d
      break
    }
  done
}

# Dependencies
command -v jq >/dev/null 2>&1 || {
  printf '%s\n%s\n' \
    "Error: You need to install jq to run $self." \
    'https://stedolan.github.io/jq/download/' >&2
  exit 1
}

# Params
options=":l:hv"
while getopts "$options" option; do
  case "${option}" in
    l)
      _synonym_language="$(_language_index ${OPTARG})"
      ;;
    h)
      _usage
      exit 0
      ;;
    v)
      printf "$version\n"
      exit 0
      ;;
    \?)
      printf "Error: invalid option: -${OPTARG}\n" >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))
_searched_word=$1
_init

[[ -z $_searched_word ]] && {
  printf 'Error: missing word to search\n' >&2
  exit 1
}
[[ -z $SYNONYM_THESAURUS_KEY ]] && {
  printf 'Error: api key not found in synonymrc\n' >&2
  exit 1
}
[[ -z $_synonym_language ]] && _synonym_language="$(_get_language)"

_url="https://thesaurus.altervista.org/thesaurus/v1\
?word=$_searched_word&language=$_synonym_language&key=$SYNONYM_THESAURUS_KEY&output=json"

_compute "$(curl -s $_url)"
exit 0
